enact: 1.0.0
id: "WeatherCheckCapability"
description: "A protocol to check current weather conditions"
version: 1.0.0
type: "atomic"
authors:
  - name: "Weather Protocol Author"

inputs:
  location:
    type: "string"
    description: "City or location to check weather"
    default: "London"
  units:
    type: "string"
    description: "Temperature units (celsius/fahrenheit)"
    default: "celsius"

tasks:
  - id: checkWeather
    type: "script"
    language: "python"
    code: |
      import requests
      
      location = inputs.get('location', 'London')
      units = inputs.get('units', 'celsius')
      
      # Note: In a real implementation, you would use an actual weather API
      api_url = f"https://api.weatherservice.com/v1/current?location={location}&units={units}"
      
      try:
          response = requests.get(api_url)
          weather_data = response.json()
          
          return {
              "temperature": weather_data["temp"],
              "conditions": weather_data["conditions"],
              "humidity": weather_data["humidity"]
          }
      except Exception as e:
          return {
              "error": f"Failed to fetch weather: {str(e)}"
          }

flow:
  steps:
    - task: checkWeather

outputs:
  type: "object"
  properties:
    temperature:
      type: "number"
      description: "Current temperature in specified units"
    conditions:
      type: "string"
      description: "Weather conditions (e.g., sunny, cloudy, rain)"
    humidity:
      type: "number"
      description: "Current humidity percentage"
    error:
      type: "string"
      description: "Error message if weather check fails"